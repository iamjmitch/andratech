<?php 
require 'api.inc.php';




class FBPosts extends api{
   protected $options;
   protected $url;
   protected $posts = "";

   public function __construct(){
    $this->options = 
    "permalink_url,message,attachments";
     $this->url = "https://graph.facebook.com/andratechcomputing/feed?access_token=".$this->accessToken."&fields=".$this->options;
    }

   //get list of facebook posts
    protected function getPostsList(){
        return $postList = json_decode(file_get_contents($this->url),true);
    }

    
    //validates the post to make sure only posts with a message are displayed. strips out updates like profile changes
    protected function postValidator(){
        $postList = $this->getPostsList();
        $validPosts = 0;
        for ($i = 0; $validPosts < 10; $i++){
            $thisPost = $postList['data'][$i];
            if (isset($thisPost['message'])){
                $this->getPostType($thisPost);
                $validPosts += 1;
                
                // echo "<br><br>";
                // var_dump($thisPost);
            }
            else{
                //post is skipped as we do not want to display it
            }
        }
    }

    //determine what type post is i.e message only, video, photo etc
    protected function getPostType($postData){
        //message only
        if (isset($postData['attachments'])){           
            $this->postHasAttachment($postData);
            
        }
        else{
            $this->postMessageOnly($postData);
        }
    }


    protected function postHasAttachment($postData){
        $thisPost = $postData['attachments']['data'][0]['media'];             
        //if post has video attached
        if (isset($thisPost['source'])){
           $this->postHasVideo($postData, $postData['message'], $thisPost['source']);
           
        }
        //if post has images only attached
        else if (isset($thisPost['image']['src'])){
            $this->postHasImage($postData);
            
        }
        else{
         //fall back to message only incase different post type arises not considered when developing
         $this->postMessageOnly($postData);
         
        }
    }

    protected function postHasVideo($postData, $message, $videoLink){
        if ($this->isYoutube($videoLink)){
            $autoPlayRemove = strtok($videoLink, '?');
            $iframeWidth = "300";
            $iframeHeight = "300";
            $cardMedia = '<iframe src="'.$autoPlayRemove.'?autoplay=0" frameborder="0" allowfullscreen width='.$iframeWidth.' height='.$iframeHeight.'></iframe>';
            $this->cardMaker($cardMedia, $message);
            
        }else{
            //compile image link to video
            
        }
        
    }

    protected function isYoutube($link){
        //check if link string contains the word "youtube"
        return (strpos($link, 'youtube') !== false);
        
    }

    protected function postHasImage($postData){
        
    }






    //function to strip the relevant data from the post object and pass to cardMaker() to output
    protected function postMessageOnly($postData){
        $imgPath = '../assets/img/generic-post-image.jpg';
        $message = $postData['message'];
        $cardMedia = '<img src="'.$imgPath.'" alt="Andratech Logo">';
        $this->cardMaker($cardMedia, $message);
        
    }

   






    // cardMaker takes the media and message generated by other functions, turns into a html card component and then add to global variable $posts
    protected function cardMaker($cardMedia, $message){
        $output =   '<div class="card">
                        <div class="cardMediaContainer">
                            '.$cardMedia.'
                        </div>
                        <div class="cardMessage">
                        '.$message.'
                        </div>
                    </div>';
        
        $this->posts = $this->posts.$output;
        var_dump($this->posts);
        echo "<br><br>";
        
    }








    // public function sorter($list){
    //     $post = $list['data'];
    //     $count = 0;
    //     for ($i=0;  $count<10; $i++){
    //         $thisPost = $post[$i];
    //         if (isset($thisPost['message'])){
    //             if (isset($thisPost['attachments'])){
    //                 //do somethign if post has atatchments
                   
    //                 if (isset($thisPost['attachments']['data'][0]["media"]['source'])){
    //                     $current = $thisPost['attachments']['data'][0]["media"];
    //                     $imgURL = $current['image']['src'];
    //                     echo '<div class="fbPostContainer" style="width:300px;display:flex;flex-direction: column;">';
    //                     echo "<iframe src='".$current['source']."?autoplay=0' width='300' height='300'></iframe>";
    //                     echo "<p style='text-align:center;    text-transform: capitalize;'>".$thisPost['message']."</p></div>";
                        
    //                     echo "<br><br>";
    //                 }
    //                 // if (strpos($thisPost['attachments']['data']['source'], 'youtube') !== false){
    //                 //     echo "post with youtube <br> " . $thisPost['message'];
    //                 //     $count += 0;
    //                 // }
    //                 else{
    //                     // echo "<br><br>post with photos <br> ".$thisPost['message'];
    //                     $count += 1;
    //                 }                   

    //             }else{
    //                 //if post has no attachments
    //                 // $this->postMessage($thisPost['message'];);
    //                 // echo "<br><br>post with no attachments <br> ".$thisPost['message'];
    //                 $count += 0;
    //             }
    //         }else{
                
    //         }
    //     }

    // }



    public function goo(){
        $this->postValidator();
    }





    public function postMessage($message){
        //add code here
    }

    // public function check(){
    //       echo '<pre>' , var_dump($this->getPostsList()) , '</pre>';
    // }
}

$fb = new FBPosts;
$fb->goo();


// $postList = json_decode(file_get_contents($url),true);  
// echo '<pre>' , var_dump($postList) , '</pre>';
// $postCount = 0;
// for ($i=0; $postCount <= 2; $i++){
//   if (isset($postList['data'][$i]['message'])){
//     echo'<div class="fb-post" data-width="350" data-href="'.$postList['data'][$i]['permalink_url'].'"></div>';
//     $postCount += 1;
//   }
// }
?>